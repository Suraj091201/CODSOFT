import tkinter as tk
from tkinter import messagebox

class TodoListApp:
    def __init__(self, master):
        self.master = master
        self.master.title("To-Do List App")

        self.tasks = []

        self.task_entry = tk.Entry(master, width=200)
        self.task_entry.pack(pady=40)

        self.add_button = tk.Button(master, text="Add Task", command=self.add_task)
        self.add_button.pack()

        self.task_listbox = tk.Listbox(master, width=150)
        self.task_listbox.pack(pady=40)

        self.update_button = tk.Button(master, text="Update Task", command=self.update_task)
        self.update_button.pack()

        self.delete_button = tk.Button(master, text="Delete Task", command=self.delete_task)
        self.delete_button.pack()

        self.status_var = tk.StringVar(value="Pending")
        self.pending_radio = tk.Radiobutton(master, text="Pending", variable=self.status_var, value="Pending")
        self.pending_radio.pack(anchor=tk.W)
        self.in_progress_radio = tk.Radiobutton(master, text="In Progress", variable=self.status_var, value="In Progress")
        self.in_progress_radio.pack(anchor=tk.W)
        self.completed_radio = tk.Radiobutton(master, text="Completed", variable=self.status_var, value="Completed")
        self.completed_radio.pack(anchor=tk.W)

        self.refresh_list()

    def add_task(self):
        task = self.task_entry.get()
        if task:
            self.tasks.append({"task": task, "status": self.status_var.get()})
            self.refresh_list()
            self.task_entry.delete(0, tk.END)
        else:
            messagebox.showwarning("Warning", "Task cannot be empty!")

    def update_task(self):
        selected_index = self.task_listbox.curselection()
        if selected_index:
            task = self.task_entry.get()
            if task:
                self.tasks[selected_index[0]]["task"] = task
                self.tasks[selected_index[0]]["status"] = self.status_var.get()
                self.refresh_list()
                self.task_entry.delete(0, tk.END)
            else:
                messagebox.showwarning("Warning", "Task cannot be empty!")
        else:
            messagebox.showwarning("Warning", "Please select a task to update!")

    def delete_task(self):
        selected_index = self.task_listbox.curselection()
        if selected_index:
            del self.tasks[selected_index[0]]
            self.refresh_list()
        else:
            messagebox.showwarning("Warning", "Please select a task to delete!")

    def refresh_list(self):
        self.task_listbox.delete(0, tk.END)
        for task in self.tasks:
            self.task_listbox.insert(tk.END, f"{task['task']} - {task['status']}")

def main():
    root = tk.Tk()
    app = TodoListApp(root)
    root.mainloop()

if __name__ == "__main__":
    main()
